version: 2.1

base_defaults: &base_defaults
    resource_class: xlarge
    working_directory: /chronon

executors:
    docker_baseimg_executor:
        resource_class: xlarge
        working_directory: /chronon
        docker:
            - image: houpy0829/chronon-ci:base--${CIRCLE_BRANCH}

jobs:
    "Docker Base Build":
        <<: *base_defaults
        docker:
            - image: docker:17.05.0-ce-git
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout
            - run:
                name: Pull existing docker image
                command: |
                    set +o pipefail
                    docker pull houpy0829/chronon-ci:base || true
            - run:
                name: Build docker image
                command: |
                    set +o pipefail
                    docker build -t houpy0829/chronon-ci:base--${CIRCLE_BRANCH} --build-arg base_image="cimg/base:2020.01" -f .circleci/Dockerfile .
            - deploy:
                name: Push docker image
                command: |
                    set +o pipefail
                    docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
                    docker push houpy0829/chronon-ci:base--${CIRCLE_BRANCH}
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        docker tag houpy0829/chronon-ci:base--${CIRCLE_BRANCH} houpy0829/chronon-ci:base
                        docker push houpy0829/chronon-ci:base
                    fi

    "Scala 11 -- Spark 2 Tests":
        executor: docker_baseimg_executor
        parallelism: 4
        steps:
            - checkout
            - run:
                  name: Run Spark 2.4.0 tests
                  shell: /bin/bash -leuxo pipefail
                  command: sbt printTests
            - run:
                  name: sbt Tests
                  command: sbt "testOnly  $(circleci tests split --split-by=timings --timings-type=classname /tmp/test-full-class-names.log | tr '\n' ' ')"
            - store_test_results:
                  path: /chronon/spark/target/test-reports
            - store_test_results:
                  path: /chronon/aggregator/target/test-reports
            - store_test_results:
                  path: /chronon/online/target/test-reports
            - store_test_results:
                  path: /chronon/api/target/test-reports
            - run:
                  name: Compress spark-warehouse
                  command: |
                    cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
                  when: on_fail
            - store_artifacts:
                  path: /tmp/spark-warehouse.tar.gz
                  destination: spark_warehouse.tar.gz
                  when: on_fail

    "Scala 12 -- Spark 3 Tests":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run Spark 3.1.1 tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      # Increase if we see OOM.
                      export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G -Xms2G"
                      sbt "++ 2.12.12 test"
            - store_test_results:
                  path: /chronon/spark/target/test-reports
            - store_test_results:
                  path: /chronon/aggregator/target/test-reports
            - run:
                  name: Compress spark-warehouse
                  command: |
                    cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
                  when: on_fail
            - store_artifacts:
                  path: /tmp/spark-warehouse.tar.gz
                  destination: spark_warehouse.tar.gz
                  when: on_fail

    "Scala 13 -- Tests":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run Scala 13 tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      # Increase if we see OOM.
                      export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G -Xms2G"
                      sbt "++ 2.13.6 test"
            - store_test_results:
                  path: /chronon/spark/target/test-reports
            - store_test_results:
                  path: /chronon/aggregator/target/test-reports
            - run:
                  name: Compress spark-warehouse
                  command: |
                    cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
                  when: on_fail
            - store_artifacts:
                  path: /tmp/spark-warehouse.tar.gz
                  destination: spark_warehouse.tar.gz
                  when: on_fail

    "Chronon Python Lint":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run Chronon Python lint
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      cd /chronon/api/py/ai/chronon
                      pip install importlib-metadata==4.11.4 #Install importlib-metadata < 5
                      flake8 --extend-ignore=W605,Q000,F631

    "Chronon Python Tests":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run Chronon Python tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      pushd /chronon/api/
                      thrift --gen py -out /chronon/api/py/ai/chronon\
                         /chronon/api/thrift/api.thrift                 # Generate thrift files
                      cd /chronon/api/py                                # Go to Python module
                      pip install -r requirements/dev.txt               # Install latest requirements
                      tox                                               # Run tests
                      popd
            - store_artifacts:
                  path: /chronon/api/py/htmlcov

    "Scalafmt Check":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run ScalafmtCheck
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      sbt +scalafmtCheck

workflows:
    build_test_deploy:
        jobs:
            - "Docker Base Build"
            - "Scala 11 -- Spark 2 Tests":
                  requires:
                      - "Docker Base Build"
            - "Scala 12 -- Spark 3 Tests":
                  requires:
                      - "Docker Base Build"
            - "Scala 13 -- Tests":
                  requires:
                      - "Docker Base Build"
            - "Scalafmt Check":
                  requires:
                      - "Docker Base Build"
            - "Chronon Python Tests":
                  requires:
                      - "Docker Base Build"
            - "Chronon Python Lint":
                  requires:
                      - "Docker Base Build"
