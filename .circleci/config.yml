version: 2.1

early_exit_for_release_prs: &early_exit_for_release_prs
    run:
        name: Early exit for release PRs
        command: |
            if expr "${CIRCLE_BRANCH}" : '^release-branch--[a-z][a-z]-v[0-9.]*$' ; then
                circleci-agent step halt
            fi

base_defaults: &base_defaults
    resource_class: xlarge
    working_directory: /zipline

commands:
    full_checkout:
        description: Checks out repo and updates submodules
        steps:
            - checkout
            - run:
                  name: Checkout submodules
                  command: git submodule update --init --recursive
    run_python_tests:
        description: Build python environment and run python tests
        steps:
            - run:
                  name: Run Chronon Python tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate zipline_py
                      pushd /zipline/api/
                      thrift --gen py -out /zipline/api/py/ai/chronon\
                         /zipline/api/thrift/api.thrift                 # Generate thrift files
                      cd /zipline/api/py                                # Go to Python module
                      pip install -r requirements/dev.txt               # Install latest requirements
                      tox                                               # Run tests
                      popd
    release_to_testpypi:
        description: Release package to pypi
        steps:
            - run:
                name: Release to pypi
                command: |
                  pushd /zipline/api/py
                  python3 -m pip install --user --upgrade twine
                  python3 setup.py sdist bdist_wheel
                  python3 -m twine upload dist/*
    lint_python_code:
        description: Lint python code.
        steps:
            - run:
                  name: Run Chronon Python lint
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate zipline_py
                      cd /zipline/api/py/ai/chronon
                      flake8 --extend-ignore=W605,Q000,F631
    release_to_pypi:
        description: Release package to testpypi
        steps:
            - run:
                name: Release to testpypi
                command: |
                  pushd /zipline/api/py
                  python3 -m pip install --user --upgrade twine
                  python3 setup.py sdist bdist_wheel
                  python3 -m twine upload dist/* --repository testpypi

executors:
    docker_baseimg_executor:
        resource_class: xlarge
        working_directory: /zipline
        docker:
            - image: patyoon/zipline-ci:base--${CIRCLE_BRANCH}

jobs:
    "Docker Base Build":
        <<: *base_defaults
        docker:
            - image: docker:17.05.0-ce-git
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout
            - run:
                name: Pull existing docker image
                command: |
                    set +o pipefail
                    docker pull patyoon/zipline-ci:base || true
            - run:
                name: Build docker image
                command: |
                    set +o pipefail
                    docker build -t patyoon/zipline-ci:base--${CIRCLE_BRANCH} --build-arg base_image="cimg/base:2020.01" -f .circleci/Dockerfile .
            - deploy:
                name: Push docker image
                command: |
                    set +o pipefail
                    docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
                    docker push patyoon/zipline-ci:base--${CIRCLE_BRANCH}
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        docker tag patyoon/zipline-ci:base--${CIRCLE_BRANCH} patyoon/zipline-ci:base
                        docker push patyoon/zipline-ci:base
                    fi

    "Chronon Scala Tests":
        executor: docker_baseimg_executor
        steps:
            - full_checkout
            - run:
                  name: Run Chronon tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      # Increase if we see OOM.
                      export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G -Xms2G"
                      sbt +test
            - store_test_results:
                  path: /zipline/spark/target/test-reports
            - store_test_results:
                  path: /zipline/aggregator/target/test-reports

    "Chronon Python Lint":
        executor: docker_baseimg_executor
        steps:
            - full_checkout
            - lint_python_code

    "Chronon Python Tests":
        executor: docker_baseimg_executor
        steps:
            - full_checkout
            - run_python_tests
            - store_artifacts:
                  path: /zipline/api/py/htmlcov

    "Release Python API to Pypi":
        executor: docker_baseimg_executor
        steps:
            - full_checkout
            - lint_python_code
            - run_python_tests
            - release_to_pypi

    "Release Python API to testpypi":
        executor: docker_baseimg_executor
        steps:
            - full_checkout
            - lint_python_code
            - run_python_tests
            - release_to_testpypi

workflows:
    build_test_deploy:
        jobs:
            - "Docker Base Build":
                filters:  # required since `Publish JARs` has tag filters AND requires this step
                    tags:
                        only: /.*/
            - "Chronon Scala Tests":
                  requires:
                      - "Docker Base Build"
                  filters:
                      tags:
                          ignore: /^release-.*/
            - "Chronon Python Tests":
                  requires:
                      - "Docker Base Build"
                  filters:
                      tags:
                          ignore: /^release-.*/
            - "Chronon Python Lint":
                  requires:
                      - "Docker Base Build"
                  filters:
                      tags:
                          ignore: /^release-.*/
            - "Release Python API to testpypi":
                  requires:
                        - "Docker Base Build"
                  filters:
                    tags:
                        only: /^release-testpypi-.*/
            - "Release Python API to Pypi":
                  requires:
                        - "Docker Base Build"
                  filters:
                      tags:
                          only: /^release-pypi-.*/
                      branches:
                          only:
                              - master

