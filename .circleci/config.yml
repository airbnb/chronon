version: 2.1

base_defaults: &base_defaults
    resource_class: xlarge
    working_directory: /chronon

executors:
    docker_baseimg_executor:
        resource_class: xlarge
        working_directory: /chronon
        docker:
            - image: houpy0829/chronon-ci:base--f87f50dc520f7a73894ae024eb78bd305d5b08e2
    docker_baseimg_executor_xxlarge:
      resource_class: 2xlarge
      working_directory: /chronon
      docker:
        - image: houpy0829/chronon-ci:base--f87f50dc520f7a73894ae024eb78bd305d5b08e2
    modern_ubuntu_executor:
        resource_class: xlarge
        working_directory: /chronon
        docker:
            - image: cimg/openjdk:11.0
    modern_ubuntu_executor_xxlarge:
        resource_class: 2xlarge
        working_directory: /chronon
        docker:
            - image: cimg/openjdk:11.0

commands:
    install_build_dependencies:
        description: "Install Thrift, Conda, SBT, and Mill on Ubuntu 22.04"
        steps:
            - run:
                name: Install system dependencies
                command: |
                    sudo apt-get update
                    sudo apt-get install -y \
                        automake \
                        bison \
                        cmake \
                        flex \
                        g++ \
                        git \
                        libboost-dev \
                        libboost-filesystem-dev \
                        libboost-program-options-dev \
                        libboost-system-dev \
                        libboost-test-dev \
                        libevent-dev \
                        libssl-dev \
                        libtool \
                        make \
                        pkg-config
            - run:
                name: Install Thrift 0.11.0 from source
                command: |
                    export THRIFT_VERSION=0.11.0
                    curl -sSL "http://archive.apache.org/dist/thrift/$THRIFT_VERSION/thrift-$THRIFT_VERSION.tar.gz" -o thrift.tar.gz
                    mkdir -p /tmp/thrift
                    tar zxf thrift.tar.gz -C /tmp/thrift --strip-components=1
                    rm thrift.tar.gz
                    cd /tmp/thrift
                    ./configure --without-python --without-cpp
                    make
                    sudo make install
                    cd /
                    rm -rf /tmp/thrift
                    thrift --version
            - run:
                name: Install SBT
                command: |
                    echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
                    curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
                    sudo apt-get update
                    sudo apt-get install -y sbt
            - run:
                name: Install Miniconda
                command: |
                    wget -q https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
                    bash ~/miniconda.sh -b -p $HOME/miniconda
                    echo 'export PATH=$HOME/miniconda/bin:$PATH' >> $BASH_ENV
                    source $BASH_ENV
                    conda create -y -n chronon_py python=3.7
                    conda install -y -q -n chronon_py --no-deps virtualenv
                    $HOME/miniconda/envs/chronon_py/bin/pip install \
                        flake8==5.0.4 flake8-quotes==3.3.1 thrift==0.11.0 click==7.0 thrift_json==0.1.0 nose>=1.3.7
                    $HOME/miniconda/envs/chronon_py/bin/pip install build
            - run:
                name: Install Mill with checksum verification
                command: |
                    curl -L https://github.com/com-lihaoyi/mill/releases/download/0.10.15/0.10.15 -o mill
                    echo "d90132b1a4ebe4d55d2bc43b3f18b5d6e8e3d12d89a83f83ad2276867e127916  mill" | sha256sum -c -
                    chmod +x mill
                    sudo mv mill /usr/local/bin/mill
                    mill --version

jobs:
    "Pull Docker Image":
        <<: *base_defaults
        docker:
            - image: docker:17.05.0-ce-git
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout
            - run:
                name: Pull existing docker image
                command: |
                    set +o pipefail
                    docker pull houpy0829/chronon-ci:base--f87f50dc520f7a73894ae024eb78bd305d5b08e2 || true

    "Scala 12 -- Spark 3 Tests":
        executor: docker_baseimg_executor_xxlarge
        steps:
            - checkout
            - run:
                  name: Run Spark 3.1.1 tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      # Increase if we see OOM.
                      export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G -Xms2G"
                      sbt "++ 2.12.12 test"
            - store_test_results:
                  path: /chronon/spark/target/test-reports
            - store_test_results:
                  path: /chronon/aggregator/target/test-reports
            - run:
                  name: Compress spark-warehouse
                  command: |
                    cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
                  when: on_fail
            - store_artifacts:
                  path: /tmp/spark-warehouse.tar.gz
                  destination: spark_warehouse.tar.gz
                  when: on_fail

    "Scala 13 -- Tests":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run Scala 13 tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      # Increase if we see OOM.
                      export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=8G -Xmx8G -Xms4G"
                      sbt "++ 2.13.6 test"
            - store_test_results:
                  path: /chronon/spark/target/test-reports
            - store_test_results:
                  path: /chronon/aggregator/target/test-reports
            - run:
                  name: Compress spark-warehouse
                  command: |
                    cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
                  when: on_fail
            - store_artifacts:
                  path: /tmp/spark-warehouse.tar.gz
                  destination: spark_warehouse.tar.gz
                  when: on_fail

    "Scala 11 -- Compile":
      executor: docker_baseimg_executor
      steps:
        - checkout
        - run:
            name: Compile Scala 11
            shell: /bin/bash -leuxo pipefail
            command: |
              conda activate chronon_py
              # Increase if we see OOM.
              export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G -Xms2G"
              sbt "++ 2.11.12 compile"

    "Chronon Python Lint":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run Chronon Python lint
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      cd /chronon/api/py/ai/chronon
                      pip install importlib-metadata==4.11.4 #Install importlib-metadata < 5
                      flake8 --extend-ignore=W605,Q000,F631,E203

    "Chronon Python Tests":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run Chronon Python tests
                  shell: /bin/bash -leuxo pipefail
                  command: |
                    conda activate chronon_py
                    pushd /chronon/api/
                    thrift --gen py -out /chronon/api/py/ai/chronon\
                       /chronon/api/thrift/api.thrift                 # Generate thrift files
                    cd /chronon/                                      # Go to Python module
                    pip install -r api/py/requirements/dev.txt        # Install latest requirements
                    tox                                               # Run tests
                    popd
            - store_artifacts:
                  path: /chronon/api/py/htmlcov

    "Scalafmt Check":
        executor: docker_baseimg_executor
        steps:
            - checkout
            - run:
                  name: Run ScalafmtCheck
                  shell: /bin/bash -leuxo pipefail
                  command: |
                      conda activate chronon_py
                      sbt +scalafmtCheck
    # run these separately as we need a isolated JVM to not have Spark session settings interfere with other runs
    # long term goal is to refactor the current testing spark session builder and avoid adding new single test to CI
    "Scala 13 -- Iceberg Format Tests":
      executor: docker_baseimg_executor
      steps:
        - checkout
        - run:
            name: Run Scala 13 tests for Iceberg format
            environment:
              format_test: iceberg
            shell: /bin/bash -leuxo pipefail
            command: |
              conda activate chronon_py
              # Increase if we see OOM.
              export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G -Xms2G"
              sbt ';project spark_embedded; ++ 2.13.6; testOnly ai.chronon.spark.test.TableUtilsFormatTest'
        - store_test_results:
            path: /chronon/spark/target/test-reports
        - store_test_results:
            path: /chronon/aggregator/target/test-reports
        - run:
            name: Compress spark-warehouse
            command: |
              cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
            when: on_fail
        - store_artifacts:
            path: /tmp/spark-warehouse.tar.gz
            destination: spark_warehouse.tar.gz
            when: on_fail
    "Scala 13 -- Iceberg Table Utils Tests":
      executor: docker_baseimg_executor
      steps:
        - checkout
        - run:
            name: Run Scala 13 tests for Iceberg Table Utils
            environment:
              format_test: iceberg
            shell: /bin/bash -leuxo pipefail
            command: |
              conda activate chronon_py
              # Increase if we see OOM.
              export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G -Xms2G"
              sbt ';project spark_embedded; ++ 2.13.6; testOnly ai.chronon.spark.test.TableUtilsTest'
        - store_test_results:
            path: /chronon/spark/target/test-reports
        - store_test_results:
            path: /chronon/aggregator/target/test-reports
        - run:
            name: Compress spark-warehouse
            command: |
              cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
            when: on_fail
        - store_artifacts:
            path: /tmp/spark-warehouse.tar.gz
            destination: spark_warehouse.tar.gz
            when: on_fail

    "Mill -- Compile All":
      executor: modern_ubuntu_executor
      steps:
        - checkout
        - install_build_dependencies
        - run:
            name: Compile all modules with Mill
            shell: /bin/bash -leuxo pipefail
            command: |
              source $BASH_ENV
              conda activate chronon_py
              # Prepare scala version-specific sources for Mill
              mill api.prepareScalaSources
              # Compile all modules
              mill api.compile aggregator.compile online.compile spark.compile flink.compile

    "Mill -- Tests":
      executor: modern_ubuntu_executor_xxlarge
      steps:
        - checkout
        - install_build_dependencies
        - run:
            name: Run all tests with Mill
            shell: /bin/bash -leuxo pipefail
            command: |
              source $BASH_ENV
              conda activate chronon_py
              mill api.prepareScalaSources
              mill api.test aggregator.test online.test spark.test flink.test
        - run:
            name: Compress spark-warehouse
            command: |
              cd /tmp/ && tar -czvf spark-warehouse.tar.gz chronon/spark-warehouse
            when: on_fail
        - store_artifacts:
            path: /tmp/spark-warehouse.tar.gz
            destination: spark_warehouse.tar.gz
            when: on_fail

    "Mill -- Python API Build":
      executor: modern_ubuntu_executor
      steps:
        - checkout
        - install_build_dependencies
        - run:
            name: Build Python API with Mill
            shell: /bin/bash -leuxo pipefail
            command: |
              source $BASH_ENV
              conda activate chronon_py
              # Set project root for Mill commands
              export CHRONON_ROOT=/chronon
              # Generate Python Thrift and build wheel
              mill generatePythonThrift
              mill buildPythonApi
        - store_artifacts:
            path: /chronon/api/py/dist

workflows:
    build_test_deploy:
        jobs:
            - "Pull Docker Image"
            - "Scala 11 -- Compile":
                requires:
                  - "Pull Docker Image"
            - "Scala 12 -- Spark 3 Tests":
                  requires:
                      - "Pull Docker Image"
            - "Scala 13 -- Tests":
                  requires:
                      - "Pull Docker Image"
            - "Scalafmt Check":
                  requires:
                      - "Pull Docker Image"
            - "Chronon Python Tests":
                  requires:
                      - "Pull Docker Image"
            - "Chronon Python Lint":
                  requires:
                      - "Pull Docker Image"
            - "Scala 13 -- Iceberg Format Tests":
                  requires:
                      - "Pull Docker Image"
            - "Scala 13 -- Iceberg Table Utils Tests":
                  requires:
                      - "Pull Docker Image"
            - "Mill -- Compile All":
                  requires:
                      - "Pull Docker Image"
            - "Mill -- Tests":
                  requires:
                      - "Pull Docker Image"
            - "Mill -- Python API Build":
                  requires:
                      - "Pull Docker Image"