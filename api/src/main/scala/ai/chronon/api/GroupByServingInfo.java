/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ai.chronon.api;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2024-12-29")
public class GroupByServingInfo implements org.apache.thrift.TBase<GroupByServingInfo, GroupByServingInfo._Fields>, java.io.Serializable, Cloneable, Comparable<GroupByServingInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupByServingInfo");

  private static final org.apache.thrift.protocol.TField GROUP_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("groupBy", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField INPUT_AVRO_SCHEMA_FIELD_DESC = new org.apache.thrift.protocol.TField("inputAvroSchema", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SELECTED_AVRO_SCHEMA_FIELD_DESC = new org.apache.thrift.protocol.TField("selectedAvroSchema", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField KEY_AVRO_SCHEMA_FIELD_DESC = new org.apache.thrift.protocol.TField("keyAvroSchema", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BATCH_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("batchEndDate", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DATE_FORMAT_FIELD_DESC = new org.apache.thrift.protocol.TField("dateFormat", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GroupByServingInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GroupByServingInfoTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable GroupBy groupBy; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String inputAvroSchema; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String selectedAvroSchema; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String keyAvroSchema; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String batchEndDate; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String dateFormat; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    GROUP_BY((short)1, "groupBy"),
    INPUT_AVRO_SCHEMA((short)2, "inputAvroSchema"),
    SELECTED_AVRO_SCHEMA((short)3, "selectedAvroSchema"),
    KEY_AVRO_SCHEMA((short)4, "keyAvroSchema"),
    BATCH_END_DATE((short)5, "batchEndDate"),
    DATE_FORMAT((short)6, "dateFormat");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // GROUP_BY
          return GROUP_BY;
        case 2: // INPUT_AVRO_SCHEMA
          return INPUT_AVRO_SCHEMA;
        case 3: // SELECTED_AVRO_SCHEMA
          return SELECTED_AVRO_SCHEMA;
        case 4: // KEY_AVRO_SCHEMA
          return KEY_AVRO_SCHEMA;
        case 5: // BATCH_END_DATE
          return BATCH_END_DATE;
        case 6: // DATE_FORMAT
          return DATE_FORMAT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.GROUP_BY,_Fields.INPUT_AVRO_SCHEMA,_Fields.SELECTED_AVRO_SCHEMA,_Fields.KEY_AVRO_SCHEMA,_Fields.BATCH_END_DATE,_Fields.DATE_FORMAT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.GROUP_BY, new org.apache.thrift.meta_data.FieldMetaData("groupBy", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GroupBy.class)));
    tmpMap.put(_Fields.INPUT_AVRO_SCHEMA, new org.apache.thrift.meta_data.FieldMetaData("inputAvroSchema", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELECTED_AVRO_SCHEMA, new org.apache.thrift.meta_data.FieldMetaData("selectedAvroSchema", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEY_AVRO_SCHEMA, new org.apache.thrift.meta_data.FieldMetaData("keyAvroSchema", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BATCH_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("batchEndDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATE_FORMAT, new org.apache.thrift.meta_data.FieldMetaData("dateFormat", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupByServingInfo.class, metaDataMap);
  }

  public GroupByServingInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GroupByServingInfo(GroupByServingInfo other) {
    if (other.isSetGroupBy()) {
      this.groupBy = new GroupBy(other.groupBy);
    }
    if (other.isSetInputAvroSchema()) {
      this.inputAvroSchema = other.inputAvroSchema;
    }
    if (other.isSetSelectedAvroSchema()) {
      this.selectedAvroSchema = other.selectedAvroSchema;
    }
    if (other.isSetKeyAvroSchema()) {
      this.keyAvroSchema = other.keyAvroSchema;
    }
    if (other.isSetBatchEndDate()) {
      this.batchEndDate = other.batchEndDate;
    }
    if (other.isSetDateFormat()) {
      this.dateFormat = other.dateFormat;
    }
  }

  public GroupByServingInfo deepCopy() {
    return new GroupByServingInfo(this);
  }

  @Override
  public void clear() {
    this.groupBy = null;
    this.inputAvroSchema = null;
    this.selectedAvroSchema = null;
    this.keyAvroSchema = null;
    this.batchEndDate = null;
    this.dateFormat = null;
  }

  @org.apache.thrift.annotation.Nullable
  public GroupBy getGroupBy() {
    return this.groupBy;
  }

  public GroupByServingInfo setGroupBy(@org.apache.thrift.annotation.Nullable GroupBy groupBy) {
    this.groupBy = groupBy;
    return this;
  }

  public void unsetGroupBy() {
    this.groupBy = null;
  }

  /** Returns true if field groupBy is set (has been assigned a value) and false otherwise */
  public boolean isSetGroupBy() {
    return this.groupBy != null;
  }

  public void setGroupByIsSet(boolean value) {
    if (!value) {
      this.groupBy = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getInputAvroSchema() {
    return this.inputAvroSchema;
  }

  public GroupByServingInfo setInputAvroSchema(@org.apache.thrift.annotation.Nullable java.lang.String inputAvroSchema) {
    this.inputAvroSchema = inputAvroSchema;
    return this;
  }

  public void unsetInputAvroSchema() {
    this.inputAvroSchema = null;
  }

  /** Returns true if field inputAvroSchema is set (has been assigned a value) and false otherwise */
  public boolean isSetInputAvroSchema() {
    return this.inputAvroSchema != null;
  }

  public void setInputAvroSchemaIsSet(boolean value) {
    if (!value) {
      this.inputAvroSchema = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSelectedAvroSchema() {
    return this.selectedAvroSchema;
  }

  public GroupByServingInfo setSelectedAvroSchema(@org.apache.thrift.annotation.Nullable java.lang.String selectedAvroSchema) {
    this.selectedAvroSchema = selectedAvroSchema;
    return this;
  }

  public void unsetSelectedAvroSchema() {
    this.selectedAvroSchema = null;
  }

  /** Returns true if field selectedAvroSchema is set (has been assigned a value) and false otherwise */
  public boolean isSetSelectedAvroSchema() {
    return this.selectedAvroSchema != null;
  }

  public void setSelectedAvroSchemaIsSet(boolean value) {
    if (!value) {
      this.selectedAvroSchema = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getKeyAvroSchema() {
    return this.keyAvroSchema;
  }

  public GroupByServingInfo setKeyAvroSchema(@org.apache.thrift.annotation.Nullable java.lang.String keyAvroSchema) {
    this.keyAvroSchema = keyAvroSchema;
    return this;
  }

  public void unsetKeyAvroSchema() {
    this.keyAvroSchema = null;
  }

  /** Returns true if field keyAvroSchema is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyAvroSchema() {
    return this.keyAvroSchema != null;
  }

  public void setKeyAvroSchemaIsSet(boolean value) {
    if (!value) {
      this.keyAvroSchema = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getBatchEndDate() {
    return this.batchEndDate;
  }

  public GroupByServingInfo setBatchEndDate(@org.apache.thrift.annotation.Nullable java.lang.String batchEndDate) {
    this.batchEndDate = batchEndDate;
    return this;
  }

  public void unsetBatchEndDate() {
    this.batchEndDate = null;
  }

  /** Returns true if field batchEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetBatchEndDate() {
    return this.batchEndDate != null;
  }

  public void setBatchEndDateIsSet(boolean value) {
    if (!value) {
      this.batchEndDate = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDateFormat() {
    return this.dateFormat;
  }

  public GroupByServingInfo setDateFormat(@org.apache.thrift.annotation.Nullable java.lang.String dateFormat) {
    this.dateFormat = dateFormat;
    return this;
  }

  public void unsetDateFormat() {
    this.dateFormat = null;
  }

  /** Returns true if field dateFormat is set (has been assigned a value) and false otherwise */
  public boolean isSetDateFormat() {
    return this.dateFormat != null;
  }

  public void setDateFormatIsSet(boolean value) {
    if (!value) {
      this.dateFormat = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case GROUP_BY:
      if (value == null) {
        unsetGroupBy();
      } else {
        setGroupBy((GroupBy)value);
      }
      break;

    case INPUT_AVRO_SCHEMA:
      if (value == null) {
        unsetInputAvroSchema();
      } else {
        setInputAvroSchema((java.lang.String)value);
      }
      break;

    case SELECTED_AVRO_SCHEMA:
      if (value == null) {
        unsetSelectedAvroSchema();
      } else {
        setSelectedAvroSchema((java.lang.String)value);
      }
      break;

    case KEY_AVRO_SCHEMA:
      if (value == null) {
        unsetKeyAvroSchema();
      } else {
        setKeyAvroSchema((java.lang.String)value);
      }
      break;

    case BATCH_END_DATE:
      if (value == null) {
        unsetBatchEndDate();
      } else {
        setBatchEndDate((java.lang.String)value);
      }
      break;

    case DATE_FORMAT:
      if (value == null) {
        unsetDateFormat();
      } else {
        setDateFormat((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case GROUP_BY:
      return getGroupBy();

    case INPUT_AVRO_SCHEMA:
      return getInputAvroSchema();

    case SELECTED_AVRO_SCHEMA:
      return getSelectedAvroSchema();

    case KEY_AVRO_SCHEMA:
      return getKeyAvroSchema();

    case BATCH_END_DATE:
      return getBatchEndDate();

    case DATE_FORMAT:
      return getDateFormat();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case GROUP_BY:
      return isSetGroupBy();
    case INPUT_AVRO_SCHEMA:
      return isSetInputAvroSchema();
    case SELECTED_AVRO_SCHEMA:
      return isSetSelectedAvroSchema();
    case KEY_AVRO_SCHEMA:
      return isSetKeyAvroSchema();
    case BATCH_END_DATE:
      return isSetBatchEndDate();
    case DATE_FORMAT:
      return isSetDateFormat();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof GroupByServingInfo)
      return this.equals((GroupByServingInfo)that);
    return false;
  }

  public boolean equals(GroupByServingInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_groupBy = true && this.isSetGroupBy();
    boolean that_present_groupBy = true && that.isSetGroupBy();
    if (this_present_groupBy || that_present_groupBy) {
      if (!(this_present_groupBy && that_present_groupBy))
        return false;
      if (!this.groupBy.equals(that.groupBy))
        return false;
    }

    boolean this_present_inputAvroSchema = true && this.isSetInputAvroSchema();
    boolean that_present_inputAvroSchema = true && that.isSetInputAvroSchema();
    if (this_present_inputAvroSchema || that_present_inputAvroSchema) {
      if (!(this_present_inputAvroSchema && that_present_inputAvroSchema))
        return false;
      if (!this.inputAvroSchema.equals(that.inputAvroSchema))
        return false;
    }

    boolean this_present_selectedAvroSchema = true && this.isSetSelectedAvroSchema();
    boolean that_present_selectedAvroSchema = true && that.isSetSelectedAvroSchema();
    if (this_present_selectedAvroSchema || that_present_selectedAvroSchema) {
      if (!(this_present_selectedAvroSchema && that_present_selectedAvroSchema))
        return false;
      if (!this.selectedAvroSchema.equals(that.selectedAvroSchema))
        return false;
    }

    boolean this_present_keyAvroSchema = true && this.isSetKeyAvroSchema();
    boolean that_present_keyAvroSchema = true && that.isSetKeyAvroSchema();
    if (this_present_keyAvroSchema || that_present_keyAvroSchema) {
      if (!(this_present_keyAvroSchema && that_present_keyAvroSchema))
        return false;
      if (!this.keyAvroSchema.equals(that.keyAvroSchema))
        return false;
    }

    boolean this_present_batchEndDate = true && this.isSetBatchEndDate();
    boolean that_present_batchEndDate = true && that.isSetBatchEndDate();
    if (this_present_batchEndDate || that_present_batchEndDate) {
      if (!(this_present_batchEndDate && that_present_batchEndDate))
        return false;
      if (!this.batchEndDate.equals(that.batchEndDate))
        return false;
    }

    boolean this_present_dateFormat = true && this.isSetDateFormat();
    boolean that_present_dateFormat = true && that.isSetDateFormat();
    if (this_present_dateFormat || that_present_dateFormat) {
      if (!(this_present_dateFormat && that_present_dateFormat))
        return false;
      if (!this.dateFormat.equals(that.dateFormat))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetGroupBy()) ? 131071 : 524287);
    if (isSetGroupBy())
      hashCode = hashCode * 8191 + groupBy.hashCode();

    hashCode = hashCode * 8191 + ((isSetInputAvroSchema()) ? 131071 : 524287);
    if (isSetInputAvroSchema())
      hashCode = hashCode * 8191 + inputAvroSchema.hashCode();

    hashCode = hashCode * 8191 + ((isSetSelectedAvroSchema()) ? 131071 : 524287);
    if (isSetSelectedAvroSchema())
      hashCode = hashCode * 8191 + selectedAvroSchema.hashCode();

    hashCode = hashCode * 8191 + ((isSetKeyAvroSchema()) ? 131071 : 524287);
    if (isSetKeyAvroSchema())
      hashCode = hashCode * 8191 + keyAvroSchema.hashCode();

    hashCode = hashCode * 8191 + ((isSetBatchEndDate()) ? 131071 : 524287);
    if (isSetBatchEndDate())
      hashCode = hashCode * 8191 + batchEndDate.hashCode();

    hashCode = hashCode * 8191 + ((isSetDateFormat()) ? 131071 : 524287);
    if (isSetDateFormat())
      hashCode = hashCode * 8191 + dateFormat.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(GroupByServingInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupBy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInputAvroSchema()).compareTo(other.isSetInputAvroSchema());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputAvroSchema()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inputAvroSchema, other.inputAvroSchema);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSelectedAvroSchema()).compareTo(other.isSetSelectedAvroSchema());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSelectedAvroSchema()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selectedAvroSchema, other.selectedAvroSchema);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyAvroSchema()).compareTo(other.isSetKeyAvroSchema());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyAvroSchema()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keyAvroSchema, other.keyAvroSchema);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBatchEndDate()).compareTo(other.isSetBatchEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBatchEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.batchEndDate, other.batchEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDateFormat()).compareTo(other.isSetDateFormat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateFormat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateFormat, other.dateFormat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("GroupByServingInfo(");
    boolean first = true;

    if (isSetGroupBy()) {
      sb.append("groupBy:");
      if (this.groupBy == null) {
        sb.append("null");
      } else {
        sb.append(this.groupBy);
      }
      first = false;
    }
    if (isSetInputAvroSchema()) {
      if (!first) sb.append(", ");
      sb.append("inputAvroSchema:");
      if (this.inputAvroSchema == null) {
        sb.append("null");
      } else {
        sb.append(this.inputAvroSchema);
      }
      first = false;
    }
    if (isSetSelectedAvroSchema()) {
      if (!first) sb.append(", ");
      sb.append("selectedAvroSchema:");
      if (this.selectedAvroSchema == null) {
        sb.append("null");
      } else {
        sb.append(this.selectedAvroSchema);
      }
      first = false;
    }
    if (isSetKeyAvroSchema()) {
      if (!first) sb.append(", ");
      sb.append("keyAvroSchema:");
      if (this.keyAvroSchema == null) {
        sb.append("null");
      } else {
        sb.append(this.keyAvroSchema);
      }
      first = false;
    }
    if (isSetBatchEndDate()) {
      if (!first) sb.append(", ");
      sb.append("batchEndDate:");
      if (this.batchEndDate == null) {
        sb.append("null");
      } else {
        sb.append(this.batchEndDate);
      }
      first = false;
    }
    if (isSetDateFormat()) {
      if (!first) sb.append(", ");
      sb.append("dateFormat:");
      if (this.dateFormat == null) {
        sb.append("null");
      } else {
        sb.append(this.dateFormat);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (groupBy != null) {
      groupBy.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GroupByServingInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GroupByServingInfoStandardScheme getScheme() {
      return new GroupByServingInfoStandardScheme();
    }
  }

  private static class GroupByServingInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<GroupByServingInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GroupByServingInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // GROUP_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.groupBy = new GroupBy();
              struct.groupBy.read(iprot);
              struct.setGroupByIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // INPUT_AVRO_SCHEMA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.inputAvroSchema = iprot.readString();
              struct.setInputAvroSchemaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SELECTED_AVRO_SCHEMA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.selectedAvroSchema = iprot.readString();
              struct.setSelectedAvroSchemaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // KEY_AVRO_SCHEMA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.keyAvroSchema = iprot.readString();
              struct.setKeyAvroSchemaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BATCH_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.batchEndDate = iprot.readString();
              struct.setBatchEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DATE_FORMAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dateFormat = iprot.readString();
              struct.setDateFormatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GroupByServingInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.groupBy != null) {
        if (struct.isSetGroupBy()) {
          oprot.writeFieldBegin(GROUP_BY_FIELD_DESC);
          struct.groupBy.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.inputAvroSchema != null) {
        if (struct.isSetInputAvroSchema()) {
          oprot.writeFieldBegin(INPUT_AVRO_SCHEMA_FIELD_DESC);
          oprot.writeString(struct.inputAvroSchema);
          oprot.writeFieldEnd();
        }
      }
      if (struct.selectedAvroSchema != null) {
        if (struct.isSetSelectedAvroSchema()) {
          oprot.writeFieldBegin(SELECTED_AVRO_SCHEMA_FIELD_DESC);
          oprot.writeString(struct.selectedAvroSchema);
          oprot.writeFieldEnd();
        }
      }
      if (struct.keyAvroSchema != null) {
        if (struct.isSetKeyAvroSchema()) {
          oprot.writeFieldBegin(KEY_AVRO_SCHEMA_FIELD_DESC);
          oprot.writeString(struct.keyAvroSchema);
          oprot.writeFieldEnd();
        }
      }
      if (struct.batchEndDate != null) {
        if (struct.isSetBatchEndDate()) {
          oprot.writeFieldBegin(BATCH_END_DATE_FIELD_DESC);
          oprot.writeString(struct.batchEndDate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.dateFormat != null) {
        if (struct.isSetDateFormat()) {
          oprot.writeFieldBegin(DATE_FORMAT_FIELD_DESC);
          oprot.writeString(struct.dateFormat);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GroupByServingInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GroupByServingInfoTupleScheme getScheme() {
      return new GroupByServingInfoTupleScheme();
    }
  }

  private static class GroupByServingInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<GroupByServingInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GroupByServingInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetGroupBy()) {
        optionals.set(0);
      }
      if (struct.isSetInputAvroSchema()) {
        optionals.set(1);
      }
      if (struct.isSetSelectedAvroSchema()) {
        optionals.set(2);
      }
      if (struct.isSetKeyAvroSchema()) {
        optionals.set(3);
      }
      if (struct.isSetBatchEndDate()) {
        optionals.set(4);
      }
      if (struct.isSetDateFormat()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetGroupBy()) {
        struct.groupBy.write(oprot);
      }
      if (struct.isSetInputAvroSchema()) {
        oprot.writeString(struct.inputAvroSchema);
      }
      if (struct.isSetSelectedAvroSchema()) {
        oprot.writeString(struct.selectedAvroSchema);
      }
      if (struct.isSetKeyAvroSchema()) {
        oprot.writeString(struct.keyAvroSchema);
      }
      if (struct.isSetBatchEndDate()) {
        oprot.writeString(struct.batchEndDate);
      }
      if (struct.isSetDateFormat()) {
        oprot.writeString(struct.dateFormat);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GroupByServingInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.groupBy = new GroupBy();
        struct.groupBy.read(iprot);
        struct.setGroupByIsSet(true);
      }
      if (incoming.get(1)) {
        struct.inputAvroSchema = iprot.readString();
        struct.setInputAvroSchemaIsSet(true);
      }
      if (incoming.get(2)) {
        struct.selectedAvroSchema = iprot.readString();
        struct.setSelectedAvroSchemaIsSet(true);
      }
      if (incoming.get(3)) {
        struct.keyAvroSchema = iprot.readString();
        struct.setKeyAvroSchemaIsSet(true);
      }
      if (incoming.get(4)) {
        struct.batchEndDate = iprot.readString();
        struct.setBatchEndDateIsSet(true);
      }
      if (incoming.get(5)) {
        struct.dateFormat = iprot.readString();
        struct.setDateFormatIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

