load("@rules_python//python:py_test.bzl", "py_test")
load("@pypi//:requirements.bzl", "requirement")
load("//tools/build_rules/python:pytest_suite.bzl", "pytest_suite")
load("@rules_python//python:packaging.bzl", "py_wheel")
load("//tools/build_rules/python:twine_upload.bzl", "twine_upload")
load("//tools/build_rules/thrift:thrift.bzl", "thrift_python_library")

py_library(
    name = "api_py",
    srcs = glob(["ai/chronon/**/*.py"]),  # All Python files in your_module
    imports = ["."],
    visibility = ["//visibility:public"],
    deps = [
        ":api-models-py",
        requirement("thrift"),
        requirement("pyyaml"),
    ],
)

## Create a Python wheel from your package
py_wheel(
    name = "chronon_ai",
    distribution = "chronon_ai",
    version = "$(version)",
    visibility = ["//visibility:public"],
    deps = [
        ":api_py",
    ],
)

## Publish the pip package
twine_upload(
    name = "upload_chronon_ai",
    version = "$(version)",
    visibility = ["//visibility:public"],
    wheel = ":chronon_ai",
)

py_binary(
    name = "compile",
    srcs = ["ai/chronon/repo/compile.py"],
    deps = [
        ":api_py",
        requirement("click"),
    ],
)

py_binary(
    name = "run",
    srcs = ["ai/chronon/repo/run.py"],
    deps = [
        requirement("pyyaml"),
    ],
)

# Temporary fix for generated Python files inaccessible in tests
# ToDo (oleksii): remove this after Chronon completes file structure reorganization
thrift_python_library(
    name = "api-models-py",
    srcs = ["api.thrift"],
    namespace = "ai.chronon",
    visibility = ["//visibility:public"],
)

pytest_suite(
    name = "api_test",
    srcs = glob(
        ["test/**/*.py"],
        exclude = ["test/sample/**/*"],
    ),
    data = glob(["test/sample/**/*",
                 "test/lineage/**/*.sql"]),
    env = {
        "CHRONON_ROOT": "api/py/",
    },
    imports = [
        ".",
        "test/sample",
    ],
    deps = [
        "//api/py:api_py",
        ":api-models-py",
        requirement("thrift"),
        requirement("pyyaml"),
        requirement("click"),
        requirement("sqlglot")
    ],
)
