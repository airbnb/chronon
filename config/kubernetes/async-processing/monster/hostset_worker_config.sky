# DO NOT EDIT: http://go/vendor-skycfg
# This file defines replica sets that correspond to Monster host sets

load("config/kubernetes/async-processing/monster/config.sky",
     "AVAILABILITY_TIER_A100", "AVAILABILITY_TIER_A200", "AVAILABILITY_TIER_A400", "AVAILABILITY_TIER_A400_AUTO")
load("config/kubernetes/async-processing/monster/hostset_worker.sky", "cluster", "hostset")
load(
    "config/kubernetes/helpers/aws_instance_sizes.sky",
    "m5_16xlarge", "r5_8xlarge", "m6g_16xlarge", "r6g_8xlarge", "r6g_xlarge", "r7g_xlarge"
)
load("config/kubernetes/async-processing/monster/util.sky", "dynamic_replicas")

def empty_worker_cluster():
  return cluster(
      consume_replicas=0,
      config_replicas=0,
      fanout_replicas=0)

def all_regions_empty_worker_cluster():
  return {
        "cmh":          empty_worker_cluster(),
        "northwest":    empty_worker_cluster(),
        "bom":          empty_worker_cluster(),
    }

A100_HOST_SETS = struct(
    availability_tier=AVAILABILITY_TIER_A100,
    hostsets=[
        hostset("high_priority_webhooks",
                is_canary=True,
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(instance_type=r7g_xlarge),
                    "bom":          cluster(instance_type=r6g_xlarge),
                    "cmh":          cluster(instance_type=r7g_xlarge),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(consume_replicas=8,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(consume_replicas=2, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=3,
                                            fanout_replicas=3,
                                            instance_type=r5_8xlarge,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                }),
        hostset("high_priority_webhooks",
                is_canary=False,
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(instance_type=r7g_xlarge),
                    "bom":          cluster(instance_type=r6g_xlarge),
                    "cmh":          cluster(instance_type=r7g_xlarge),
                },
                prod={
                    "northwest":    cluster(consume_replicas=36,
                                            fanout_replicas=10,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(consume_replicas=10,
                                            fanout_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=13,
                                            fanout_replicas=6,
                                            instance_type=r5_8xlarge,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                }),
        hostset("checkout",
                is_canary=True,
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "bom":          cluster(consume_replicas=2, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "northwest":    cluster(consume_replicas=8,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=4,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("checkout",
                is_canary=False,
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "bom":          cluster(consume_replicas=10, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "northwest":    cluster(consume_replicas=36,
                                            fanout_replicas=10,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=5,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
    ]
)

A200_HOST_SETS = struct(
    availability_tier=AVAILABILITY_TIER_A200,
    hostsets=[
        hostset("api-platform",
                is_canary=False,
                disable_preloading=True, # If re-enabling preloading, make sure to bump mb_per_worker to 2500 and scale accordingly
                suffix="low-cpu",
                qa={
                    "northwest":    cluster(mb_per_worker=1250, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                    "bom":          cluster(mb_per_worker=1250, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=1250, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(consume_replicas=29,
                                            fanout_replicas=6,
                                            mb_per_worker=1250,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False), # 189 workers
                    "bom":          cluster(consume_replicas=12,
                                            fanout_replicas=3,
                                            mb_per_worker=1100,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=11,
                                            fanout_replicas=4,
                                            instance_type=r5_8xlarge,
                                            mb_per_worker=1250,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False), # 189 workers
                }
        ),
        hostset("api-platform",
                is_canary=True,
                disable_preloading=True, # If re-enabling preloading, make sure to bump mb_per_worker to 2500 and scale accordingly
                suffix="low-cpu",
                qa={
                    "northwest":    cluster(mb_per_worker=1250, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                    "bom":          cluster(mb_per_worker=1250, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=1250, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(consume_replicas=4,
                                            mb_per_worker=1250,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          empty_worker_cluster(),
                    "cmh":          empty_worker_cluster(),
                }
        ),
        hostset("billing",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(consume_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=8,
                                            fanout_replicas=4,
                                            mb_per_worker=2600,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(consume_replicas=2,
                                            fanout_replicas=2,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=16,
                                            fanout_replicas=6,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("capital",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=4, mb_per_worker=2600, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=3, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                }),
        hostset("cards-authz",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=3000),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=12,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=5,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("clearing",
                suffix="low-cpu",
                disable_preloading=True, # This allows a smaller mb_per_worker. If re-enabling preloading, make sure to bump mb_per_worker
                default=            cluster(mb_per_worker=3100),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=37,
                                            fanout_replicas=4,
                                            mb_per_worker=2800,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(mb_per_worker=2700,
                                            consume_replicas=6,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=4,
                                            fanout_replicas=2,
                                            mb_per_worker=3200,
                                            instance_type=r5_8xlarge,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                }),
        hostset("connect",
                suffix="low-cpu",
                qa={
                    "northwest":    cluster(mb_per_worker=2800,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=10,
                                            mb_per_worker=2800,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("connections",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2800),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=6,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(consume_replicas=3,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=3,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("emails",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=3000),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(consume_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(mb_per_worker=2650,
                                            consume_replicas=9,
                                            fanout_replicas=4, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                    "bom":          cluster(consume_replicas=6, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=4, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                }),
        hostset("high_priority_emails",
                suffix="low-cpu",
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(fanout_replicas=4, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(fanout_replicas=3, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                }),
        hostset("frontline_experience",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("issuing",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=3300),
                qa={
                    "northwest":    cluster(mb_per_worker=3300, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(mb_per_worker=3300, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=3300, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(mb_per_worker=3250,
                                            consume_replicas=16,
                                            fanout_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(mb_per_worker=6300,
                                            consume_replicas=6,
                                            fanout_replicas=6,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=6300,
                                            consume_replicas=4,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    }),
        hostset("local-payment-methods",
                suffix="low-cpu",
                default=cluster(mb_per_worker=2400),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(
                        consume_replicas=8,
                        graviton_migration_enabled=True,
                        graviton_migration_size="100%",
                        graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                }),
        hostset("merchant-fraud-ml",
                suffix="low-cpu",
                disable_preloading=True, # This allows a smaller mb_per_worker. If re-enabling preloading, make sure to bump mb_per_worker
                default=            cluster(mb_per_worker=2400),
                qa={
                    "northwest":    cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=68,
                                            fanout_replicas=14,
                                            mb_per_worker=1700,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(consume_replicas=6,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=20,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                }),
        hostset("mobile",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("latam",
                suffix="low-cpu",
                qa=all_regions_empty_worker_cluster(),
                prod=all_regions_empty_worker_cluster(),
                ),
        hostset("link",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2600),
                preprod={
                    "northwest":    cluster(consume_replicas=4),
                    "cmh":          cluster(consume_replicas=3),
                },
                prod={
                    "northwest":    cluster(consume_replicas=4,
                                            fanout_replicas=3),
                    "cmh":          cluster(consume_replicas=3),
                }),
        hostset("model-ingestion",
                suffix="low-cpu",
                # pre-loading disabled for fanout workers through environment variables
                prod={
                    "northwest":    cluster(consume_replicas=dynamic_replicas(18, 42, 4),
                                            fanout_replicas=18,
                                            mb_per_worker=2600,
                                            instance_type=r6g_8xlarge),
                    "bom":          cluster(consume_replicas=6,
                                            fanout_replicas=2,
                                            instance_type=r6g_xlarge),
                    "cmh":          cluster(consume_replicas=3,
                                            fanout_replicas=2,
                                            instance_type=r6g_xlarge),
                },
                qa={
                    "northwest":    cluster(instance_type=r6g_xlarge),
                    "bom":          cluster(instance_type=r6g_xlarge),
                    "cmh":          cluster(instance_type=r6g_xlarge),
                }),
        hostset("payment-flows",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2600),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    cluster(consume_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=4,
                                            fanout_replicas=3,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=8,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("payouts",
                suffix="low-cpu",
                disable_preloading=True, # This allows a smaller mb_per_worker. If re-enabling preloading, make sure to bump mb_per_worker
                default=            cluster(mb_per_worker=3100),
                qa={
                    "northwest":    cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=50,
                                            fanout_replicas=10,
                                            mb_per_worker=2500,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(consume_replicas=11,
                                            fanout_replicas=7,
                                            mb_per_worker=4500,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=5,
                                            fanout_replicas=5,
                                            mb_per_worker=4500,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),


                }),
        hostset("radar",
                suffix="low-cpu",
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest": cluster(consume_replicas=12,
                                         fanout_replicas=4,
                                         mb_per_worker=2500,
                                         graviton_migration_enabled=True,
                                         graviton_migration_size="100%",
                                         graviton_migration_target_6g=True),
                    "bom":       cluster(consume_replicas=6,
                                         fanout_replicas=3,
                                         mb_per_worker=2500,
                                         graviton_migration_enabled=True,
                                         graviton_migration_size="100%",
                                         graviton_migration_target_6g=True),
                    "cmh":       cluster(consume_replicas=12,
                                         fanout_replicas=4,
                                         mb_per_worker=2500,
                                         graviton_migration_enabled=True,
                                         graviton_migration_size="100%",
                                         graviton_migration_target_6g=True),
                }),
        hostset("review-platform",
                suffix="low-cpu",
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=6,
                                            mb_per_worker=2600,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("revolve-default",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(consume_replicas=3, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=34,
                                            fanout_replicas=2,
                                            mb_per_worker=2600,
                                            instance_type=r6g_8xlarge),
                    "bom":    cluster(consume_replicas=10,
                                            fanout_replicas=2,
                                            instance_type=r6g_xlarge),
                    "cmh":          cluster(consume_replicas=16,
                                            fanout_replicas=2,
                                            instance_type=r6g_8xlarge),
                }),
        hostset("risk",
                suffix="low-cpu",
                disable_preloading=True, # This allows a smaller mb_per_worker. If re-enabling preloading, make sure to bump mb_per_worker
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(consume_replicas=6,
                                            fanout_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(mb_per_worker=1800,
                                            consume_replicas=16,
                                            fanout_replicas=6,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(mb_per_worker=1800,
                                            consume_replicas=11,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=5,
                                            mb_per_worker=1800,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                }),
        hostset("schema-ci-status-consumer",
                suffix="low-cpu",
                qa={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          empty_worker_cluster(),
                    "cmh":          empty_worker_cluster(),
                },
                prod={
                    "northwest":    cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          empty_worker_cluster(),
                    "cmh":          empty_worker_cluster(),
                },
        ),
        hostset("search-desc-connect",
                suffix="low-cpu",
                disable_preloading=True, # This allows a smaller mb_per_worker. If re-enabling preloading, make sure to bump mb_per_worker
                qa={
                    "northwest":    cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=2800, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(mb_per_worker=2100,
                                            consume_replicas=40,
                                            fanout_replicas=2,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(mb_per_worker=1850,
                                            consume_replicas=6,
                                            fanout_replicas=2,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(mb_per_worker=2800,
                                            consume_replicas=4,
                                            fanout_replicas=2,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("sigma-assistant",
                suffix="low-cpu",
                disable_preloading=True, # This allows a smaller mb_per_worker. If re-enabling preloading, make sure to bump mb_per_worker
                qa=                 all_regions_empty_worker_cluster(),
                preprod={
                    "northwest":    cluster(consume_replicas=4,
                                            fanout_replicas=3,
                                            mb_per_worker=2800,
                                            instance_type=r6g_xlarge
                                    ),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(consume_replicas=3,
                                            fanout_replicas=3,
                                            mb_per_worker=2800,
                                            instance_type=r6g_xlarge
                                    ),
                },
                prod={
                    "northwest":    cluster(consume_replicas=4,
                                            fanout_replicas=3,
                                            mb_per_worker=2800,
                                            instance_type=r6g_xlarge
                                    ),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(consume_replicas=3,
                                            fanout_replicas=3,
                                            mb_per_worker=2800,
                                            instance_type=r6g_xlarge
                                    ),
                }),
        hostset("verifications",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=2800),
                qa={
                    "northwest":    cluster(consume_replicas=6, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                },
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    # TODO(RUN_IDCORE, 2022-12-01): Investigate whether the cmh
                    # entry here can be removed. See
                    # https://docs.google.com/document/d/1xVENl7Kxtkz2V3fHHnMNjbmTet9z9ofAYLI_L32lKm8/edit
                    # for details.
                    "cmh":          cluster(consume_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "northwest":    cluster(consume_replicas=8,
                                            fanout_replicas=4,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(consume_replicas=2,
                                            fanout_replicas=2,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=2,
                                            fanout_replicas=2,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
        hostset("webhooks",
                is_canary=True,
                disable_preloading=True, # If re-enabling preloading, make sure to bump mb_per_worker to 2400 and scale accordingly
                suffix="low-cpu",
                qa= {
                    "northwest":    cluster(mb_per_worker=2500, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(consume_replicas=14,
                                            fanout_replicas=3,
                                            mb_per_worker=900, # 263 workers
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(consume_replicas=10,
                                            mb_per_worker=750,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=4,
                                            instance_type=r5_8xlarge,
                                            mb_per_worker=900, # 263 workers
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                }
        ),
        hostset("webhooks",
                is_canary=False,
                disable_preloading=True, # If re-enabling preloading, make sure to bump mb_per_worker to 2400 and scale accordingly
                suffix="low-cpu",
                qa= {
                    "northwest":    cluster(mb_per_worker=2500, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                    "bom":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                    "cmh":          cluster(graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=False),
                },
                prod={
                    "northwest":    cluster(consume_replicas=62,
                                            fanout_replicas=9,
                                            mb_per_worker=900, # 263 workers
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                    "bom":          cluster(consume_replicas=30,
                                            fanout_replicas=3,
                                            mb_per_worker=750,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "cmh":          cluster(consume_replicas=11,
                                            fanout_replicas=3,
                                            instance_type=r5_8xlarge,
                                            mb_per_worker=900, # 263 workers
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=False),
                }
        ),
    ]
)

A400_HOST_SETS = struct(
    availability_tier=AVAILABILITY_TIER_A400,
    hostsets=[
        hostset("general",
                default=            cluster(mb_per_worker=4000),
                qa={
                    "bom":          cluster(consume_replicas=2,
                                            fanout_replicas=2, instance_type=r6g_xlarge),
                    "cmh":          cluster(consume_replicas=2,
                                            fanout_replicas=2, instance_type=r6g_xlarge),
                    "northwest":    cluster(consume_replicas=3,
                                            fanout_replicas=3, instance_type=r6g_8xlarge),
                },
                prod={
                    "cmh":          empty_worker_cluster(),
                    "northwest":    cluster(mb_per_worker=3800, # Increasing mb_per_worker slightly to see impact on memory usage
                                            consume_replicas=250,
                                            fanout_replicas=0,
                                            instance_type=m5_16xlarge,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          empty_worker_cluster(),
                }),
        hostset("general",
                suffix="low-cpu",
                default=            cluster(mb_per_worker=4000),
                qa=all_regions_empty_worker_cluster(),
                preprod={
                    "northwest":    empty_worker_cluster(),
                    "bom":          empty_worker_cluster(),
                    "cmh":          cluster(consume_replicas=5,
                                            fanout_replicas=3,
                                            instance_type=r5_8xlarge,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                },
                prod={
                    "cmh":          cluster(mb_per_worker=3600,
                                            consume_replicas=6,
                                            fanout_replicas=3,
                                            instance_type=r5_8xlarge,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    "bom":          cluster(mb_per_worker=3600,
                                            consume_replicas=6,
                                            fanout_replicas=3,
                                            instance_type=r5_8xlarge,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                    # pre-loading disabled for fanout workers through environment variables
                    # general workers need a little bit more cpu, so we're increasing the
                    # mb_per_worker to reduce the number of workers per pod
                    "northwest":    cluster(mb_per_worker=3400, # Increasing because of high memory utilization
                                            consume_replicas=0,
                                            fanout_replicas=40,
                                            graviton_migration_enabled=True,
                                            graviton_migration_size="100%",
                                            graviton_migration_target_6g=True),
                }),
    ]
)

# Sigma used to use autoscaling, thus the "auto" in msp-a400-auto
# Details on how to restore it in the future: https://jira.corp.stripe.com/browse/ASYNCPROCESSING-2141
SIGMA_HOST_SET = struct(
    availability_tier=AVAILABILITY_TIER_A400_AUTO,
    hostsets=[
        hostset("sigma",
                # N.B: the math below for the number of workers is the original sizing;
                # this is a temporary increase in memory to alleviate https://go/ir/desk-subside
                default=            cluster(mb_per_worker=2500),
                qa={
                    "bom":    cluster(consume_replicas=2, fanout_replicas=2, instance_type=r6g_xlarge),
                    "cmh":          cluster(consume_replicas=dynamic_replicas(0, 0, 0),
                                            fanout_replicas=0,
                                            instance_type=r6g_xlarge),
                    "northwest":    cluster(mb_per_worker=2900,
                                            consume_replicas=dynamic_replicas(2, 4, 1),
                                            instance_type=r6g_xlarge),
                },
                # pre-loading disabled for fanout workers through environment variables
                prod={
                    "cmh":          cluster(consume_replicas=0,
                                            fanout_replicas=0),
                    "northwest":
                                    cluster(consume_replicas=dynamic_replicas(100, 200, 10),
                                            fanout_replicas=15,
                                            mb_per_worker=2900,
                                            instance_type=r6g_8xlarge),
                    "bom":
                    # As part of the cutover for India DL, we expect BOM to see up to 20% of northwest's traffic
                    # Since we use the same spot instance mix in both regions, we can simply size to 20% of northwest
                    # At max, we'll have 50 consumer worker pods (1 per node) x 72 workers/pod = 3,600 workers
                                    cluster(consume_replicas=dynamic_replicas(5, 30, 3),
                                            fanout_replicas=dynamic_replicas(2, 4, 1),
                                            instance_type=r6g_8xlarge),
                }),
    ]
)

TEST_HOST_SET = struct(
    availability_tier=AVAILABILITY_TIER_A400,
    hostsets=[
        hostset("monster-test",
                prod={
                    "northwest":    cluster(consume_replicas=2, fanout_replicas=2, mb_per_worker=2800, instance_type=r6g_8xlarge),
                    "bom":          cluster(mb_per_worker=2800, instance_type=r6g_xlarge),
                    "cmh":          cluster(mb_per_worker=2800, instance_type=r6g_xlarge),
                },
                qa={
                    "northwest":    cluster(consume_replicas=2,
                                            fanout_replicas=2, instance_type=r6g_xlarge),
                    "bom":          cluster(consume_replicas=2,
                                            fanout_replicas=2, instance_type=r6g_xlarge),
                    "cmh":          cluster(consume_replicas=2,
                                            fanout_replicas=2, graviton_migration_enabled=True, graviton_migration_size="100%", graviton_migration_target_6g=True),
                }),
    ]
)

def get_host_set_map_from_tier(tier):
  return [(hostset.name, struct(hostset=hostset, availability_tier=tier.availability_tier)) for hostset in tier.hostsets]

def get_entries_from_host_set_list(host_set_list):
    entries = []
    for host_set in host_set_list:
        entries.extend(get_host_set_map_from_tier(host_set))
    return entries

def generate_all_host_set_map(entries):
    output = {}
    for entry in entries:
        key, value = entry
        if output.get(key) == None:
            output.update({key: [value]})
        else:
            output.get(key).append(value)
    return output


HOST_SETS_LIST = [
    A100_HOST_SETS,
    A200_HOST_SETS,
    A400_HOST_SETS,
    SIGMA_HOST_SET,
    TEST_HOST_SET
]

ALL_HOST_SETS_ENTRIES = get_entries_from_host_set_list(HOST_SETS_LIST)

# This map allows looking up host set definitions by name: [host_set -> [hostset_structs]]
# If there are multiple "hostset" structs defined for a host set name (e.g. canary), it will include both in a unordered list
ALL_HOST_SETS_MAP = generate_all_host_set_map(ALL_HOST_SETS_ENTRIES)
